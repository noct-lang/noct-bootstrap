<?xml version="1.0" encoding="utf-8"?> 
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
  <!--Types-->
  <Type Name="Noctis::TypeHandle">
    <DisplayString Condition="type == 0">invalid</DisplayString>
    <DisplayString>type-handle {{{type->type}}}</DisplayString>
    <Expand>
      <ExpandedItem>type->type</ExpandedItem>
    </Expand>
  </Type>
  <Type Name="std::shared_ptr&lt;Noctis::Type&gt;">
    <DisplayString Condition="_Ptr == 0">invalid-type</DisplayString>
    <DisplayString>{*_Ptr}</DisplayString>
    <Expand>
      <ExpandedItem>*_Ptr</ExpandedItem>
      <Item Name="[ptr]">_Ptr</Item>
    </Expand>
  </Type>
  <Type Name="Noctis::Type">
    <DisplayString>{{kind='{typeKind}'}}</DisplayString>
    <Expand>
      <ExpandedItem Condition="typeKind==Noctis::TypeKind::Builtin">builtin</ExpandedItem>
      <ExpandedItem Condition="typeKind==Noctis::TypeKind::Iden">iden</ExpandedItem>
      <ExpandedItem Condition="typeKind==Noctis::TypeKind::Ptr">ptr</ExpandedItem>
      <ExpandedItem Condition="typeKind==Noctis::TypeKind::Ref">ref</ExpandedItem>
      <ExpandedItem Condition="typeKind==Noctis::TypeKind::Slice">slice</ExpandedItem>
      <ExpandedItem Condition="typeKind==Noctis::TypeKind::Array">arr</ExpandedItem>
      <ExpandedItem Condition="typeKind==Noctis::TypeKind::Tuple">tup</ExpandedItem>
      <ExpandedItem Condition="typeKind==Noctis::TypeKind::Opt">opt</ExpandedItem>
      <ExpandedItem Condition="typeKind==Noctis::TypeKind::Compound">compound</ExpandedItem>
      <ExpandedItem Condition="typeKind==Noctis::TypeKind::Func">func</ExpandedItem>
      <ExpandedItem Condition="typeKind==Noctis::TypeKind::Generic">generic</ExpandedItem>
    </Expand>
  </Type>
  <!--QualName-->
  <Type Name="std::shared_ptr&lt;Noctis::QualName&gt;">
    <DisplayString Condition="_Ptr == 0">empty</DisplayString>
    <DisplayString>qualname {*_Ptr}</DisplayString>
    <Expand>
      <ExpandedItem>*_Ptr</ExpandedItem>
      <Item Name="[ptr]">_Ptr</Item>
    </Expand>
  </Type>
  <Type Name="Noctis::QualName">
    <DisplayString>{m_Idens}</DisplayString>
    <Expand>
      <Item Name="[disambig]">m_Disambiguation</Item>
      <ArrayItems>
        <Size>m_Idens._Mypair._Myval2._Myend - m_Idens._Mypair._Myval2._Myfirst</Size>
        <ValuePointer>m_Idens._Mypair._Myval2._Myfirst</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  <Type Name="std::shared_ptr&lt;Noctis::Iden&gt;">
    <DisplayString Condition="_Ptr == 0">empty</DisplayString>
    <DisplayString>iden {*_Ptr}</DisplayString>
    <Expand>
      <ExpandedItem>*_Ptr</ExpandedItem>
      <Item Name="[ptr]">_Ptr</Item>
    </Expand>
  </Type>
  <Type Name="Noctis::Iden">
    <DisplayString>{{name='{m_Name}', generics={m_Generics}}}</DisplayString>
    <Expand>
      <Item Name="[name]">m_Name</Item>
      <Item Name="[generics]">m_Generics</Item>
    </Expand>
  </Type>
  <Type Name="Noctis::TypeDisambiguation">
    <DisplayString>{{type='{m_Type}', iface='{m_QualName}'}}</DisplayString>
    <Expand>
      <Item Name="[type]">m_Type</Item>
      <Item Name="[iface]">m_QualName</Item>
    </Expand>
  </Type>
  <Type Name="std::shared_ptr&lt;Noctis::TypeDisambiguation&gt;">
    <DisplayString>disambig {*_Ptr}</DisplayString>
    <Expand>
      <ExpandedItem>*_Ptr</ExpandedItem>
      <Item Name="[ptr]">_Ptr</Item>
    </Expand>
  </Type>
</AutoVisualizer>